{"ast":null,"code":"var _jsxFileName = \"/Users/emilysun/CodeChallenges/TheMuseJobSearchCodeChallenge/src/contexts/JobContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext(null);\nexport const JobSearchProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [jobTitle, setJobTitle] = useState('');\n  const [jobsList, setJobsList] = useState([]);\n\n  const searchJobTitle = async jobTitle => {\n    console.log(\"searched\");\n    const result = [{\n      title: 'this is a job for now'\n    }];\n    setJobsList(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      jobsList,\n      searchJobTitle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobSearchProvider, \"p6NPBQ8g9VJlm7YjrrpSLiWQ958=\");\n\n_c = JobSearchProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobSearchProvider\");","map":{"version":3,"sources":["/Users/emilysun/CodeChallenges/TheMuseJobSearchCodeChallenge/src/contexts/JobContext.tsx"],"names":["React","useState","createContext","Context","JobSearchProvider","children","jobsList","setJobsList","searchJobTitle","jobTitle","console","log","result","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAAkD,OAAlD;;AASA,OAAO,MAAMC,OAAO,gBAAGD,aAAa,CAAwB,IAAxB,CAA7B;AAGP,OAAO,MAAME,iBAAqB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACjD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAc,EAAd,CAAxC;;AAEA,QAAMO,cAAc,GAAG,MAAOC,QAAP,IAA6B;AAChDC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAMC,MAAM,GAAG,CAAC;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAD,CAAf;AACAN,IAAAA,WAAW,CAACK,MAAD,CAAX;AACH,GAJD;;AAMA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACN,MAAAA,QAAD;AAAWE,MAAAA;AAAX,KAAzB;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfM;;GAAMD,iB;;KAAAA,iB","sourcesContent":["import React, { useState, createContext, FC} from 'react';\n\ninterface SingleJob {\n    title: string,\n}\ninterface ContextDefault {\n    jobsList: SingleJob[], // update this when Ik the type\n    searchJobTitle: (jobTitle: string) => void,\n}\nexport const Context = createContext<ContextDefault | null>(null);\n\n\nexport const JobSearchProvider: FC = ({children}) => {\n    // const [jobTitle, setJobTitle] = useState('');\n    const [jobsList, setJobsList] = useState<SingleJob[]>([]);\n\n    const searchJobTitle = async (jobTitle : string) => {\n        console.log(\"searched\")\n        const result = [{title: 'this is a job for now'}]\n        setJobsList(result);\n    }\n    \n    return (\n        <Context.Provider value={{jobsList, searchJobTitle}}>\n            {children}\n        </Context.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}